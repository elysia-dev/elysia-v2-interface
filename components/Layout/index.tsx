import Navigation from 'components/Navigation';
import Head from 'next/head';
import { useCallback, useEffect, useRef } from 'react';
import Gradient from 'utils/gradient';
import { GradientCanvas, LayoutNoise } from './styles';
import dynamic from 'next/dynamic';

const Footer = dynamic(() => import('components/Footer'));

interface LayoutProps {
  children: React.ReactNode;
}

const Layout = (props: LayoutProps) => {
  const canvasRef = useRef<HTMLCanvasElement>(null);

  const drawCanvas = useCallback(() => {
    const dpr = window.devicePixelRatio;
    const canvas: HTMLCanvasElement | null = canvasRef.current;

    if (!canvas) return;
    let sub = 0;
    if (window.innerHeight > document.body.clientHeight) {
      sub = window.innerHeight - document.body.clientHeight;
    }
    canvas.width = window.innerWidth * dpr;
    canvas.height = window.innerHeight * dpr;
    const ctx = canvas.getContext('2d');

    if (!ctx) return;
    ctx.scale(2.5, 2.5);
    new Gradient(ctx, canvas.width, canvas.height);
  }, []);

  useEffect(() => {
    drawCanvas();
  }, [drawCanvas]);

  useEffect(() => {
    window.addEventListener('resize', () => {
      drawCanvas();
    });

    return () => {
      window.removeEventListener('resize', () => {
        drawCanvas();
      });
    };
  }, []);

  return (
    <>
      <Head>
        <title>Elysia</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GradientCanvas ref={canvasRef} />
      <LayoutNoise />
      <Navigation />
      <div
        style={{
          width: '100%',
          margin: 'auto',
        }}>
        <div
          style={{
            display: 'flex',
            justifyContent: 'center',
          }}>
          <div
            style={{
              width: '90%',
              maxWidth: '1639px',
            }}>
            {props.children}
          </div>
        </div>
      </div>
      <Footer />
    </>
  );
};

export default Layout;
